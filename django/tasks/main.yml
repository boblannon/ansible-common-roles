---

# sets a pypackages fact based on python version
- name: determine python 2 package list
  set_fact: python_pkg=python, python_dev_pkg=python-dev, uwsgi_pkg=uwsgi-plugin-python
  when: python_version == 2
- name: determine python 3 package list
  set_fact: python_pkg=python3, python_dev_pkg=python3-dev, uwsgi_pkg=uwsgi-plugin-python3
  when: python_version == 3

- name: install needed packages
  apt: pkg={{item}} update_cache=yes
  with_items:
    - python-virtualenv
    - uwsgi
    - nginx
    - {{python_pkg}}
    - {{python_dev_pkg}}
    - {{uwsgi_pkg}}
- name: remove nginx sites-enabled/default
  file: path=/etc/nginx/sites-enabled/default state=absent
- name: write uwsgi template
  template: src=uwsgi.j2 dest=/etc/uwsgi/apps-enabled/{{project_name}}.ini
  notify:
    - restart uwsgi
- name: write nginx template
  template: src=nginx.j2 dest=/etc/nginx/sites-enabled/{{project_name}}
  notify:
    - restart nginx
- name: make project dir
  file: path=/projects/{{project_name}} state=directory
- name: add project user
  user: name={{project_name}} home=/projects/{{project_name}} shell=/bin/bash state=present
- name: chown user directory
  file: path=/projects/{{project_name}} owner={{project_name}}

- name: add directories
  file: path=/projects/{{project_name}}/{{item}} owner={{project_name}} state=directory
  with_items:
    - logs
    - data
  sudo_user: "{{project_name}}"

- name: create virtualenv
  command: virtualenv -p python3 /projects/{{project_name}}/virt creates=/projects/{{project_name}}/virt
  sudo_user: "{{project_name}}"
  notify:
    - restart uwsgi

- name: checkout project
  git: repo={{gitrepo}} dest=/projects/{{project_name}}/src
  sudo_user: "{{project_name}}"
  when: do_checkout == True
  notify:
    - restart uwsgi

- name: install requirements
  pip: requirements=/projects/{{project_name}}/src/requirements.txt virtualenv=/projects/{{project_name}}/virt/
  sudo_user: "{{project_name}}"
  notify:
    - restart uwsgi
